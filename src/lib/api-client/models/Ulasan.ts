/* tslint:disable */
/* eslint-disable */
/**
 * MyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Motor } from './Motor';
import {
    MotorFromJSON,
    MotorFromJSONTyped,
    MotorToJSON,
    MotorToJSONTyped,
} from './Motor';
import type { Pelanggan } from './Pelanggan';
import {
    PelangganFromJSON,
    PelangganFromJSONTyped,
    PelangganToJSON,
    PelangganToJSONTyped,
} from './Pelanggan';

/**
 * 
 * @export
 * @interface Ulasan
 */
export interface Ulasan {
    /**
     * 
     * @type {number}
     * @memberof Ulasan
     */
    idUlasan?: number;
    /**
     * 
     * @type {number}
     * @memberof Ulasan
     */
    idMotor?: number;
    /**
     * 
     * @type {number}
     * @memberof Ulasan
     */
    idPelanggan?: number;
    /**
     * 
     * @type {number}
     * @memberof Ulasan
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof Ulasan
     */
    komentar?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Ulasan
     */
    tanggalUlasan?: Date;
    /**
     * 
     * @type {Motor}
     * @memberof Ulasan
     */
    motor?: Motor;
    /**
     * 
     * @type {Pelanggan}
     * @memberof Ulasan
     */
    pelanggan?: Pelanggan;
}

/**
 * Check if a given object implements the Ulasan interface.
 */
export function instanceOfUlasan(value: object): value is Ulasan {
    return true;
}

export function UlasanFromJSON(json: any): Ulasan {
    return UlasanFromJSONTyped(json, false);
}

export function UlasanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ulasan {
    if (json == null) {
        return json;
    }
    return {
        
        'idUlasan': json['idUlasan'] == null ? undefined : json['idUlasan'],
        'idMotor': json['idMotor'] == null ? undefined : json['idMotor'],
        'idPelanggan': json['idPelanggan'] == null ? undefined : json['idPelanggan'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'komentar': json['komentar'] == null ? undefined : json['komentar'],
        'tanggalUlasan': json['tanggalUlasan'] == null ? undefined : (new Date(json['tanggalUlasan'])),
        'motor': json['motor'] == null ? undefined : MotorFromJSON(json['motor']),
        'pelanggan': json['pelanggan'] == null ? undefined : PelangganFromJSON(json['pelanggan']),
    };
}

export function UlasanToJSON(json: any): Ulasan {
    return UlasanToJSONTyped(json, false);
}

export function UlasanToJSONTyped(value?: Ulasan | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idUlasan': value['idUlasan'],
        'idMotor': value['idMotor'],
        'idPelanggan': value['idPelanggan'],
        'rating': value['rating'],
        'komentar': value['komentar'],
        'tanggalUlasan': value['tanggalUlasan'] == null ? undefined : ((value['tanggalUlasan']).toISOString()),
        'motor': MotorToJSON(value['motor']),
        'pelanggan': PelangganToJSON(value['pelanggan']),
    };
}

