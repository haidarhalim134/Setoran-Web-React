/* tslint:disable */
/* eslint-disable */
/**
 * MyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Motor } from './Motor';
import {
    MotorFromJSON,
    MotorFromJSONTyped,
    MotorToJSON,
    MotorToJSONTyped,
} from './Motor';

/**
 * 
 * @export
 * @interface MotorImage
 */
export interface MotorImage {
    /**
     * 
     * @type {number}
     * @memberof MotorImage
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof MotorImage
     */
    idMotor?: number;
    /**
     * 
     * @type {string}
     * @memberof MotorImage
     */
    front?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MotorImage
     */
    left?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MotorImage
     */
    right?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MotorImage
     */
    rear?: string | null;
    /**
     * 
     * @type {Motor}
     * @memberof MotorImage
     */
    motor?: Motor;
}

/**
 * Check if a given object implements the MotorImage interface.
 */
export function instanceOfMotorImage(value: object): value is MotorImage {
    return true;
}

export function MotorImageFromJSON(json: any): MotorImage {
    return MotorImageFromJSONTyped(json, false);
}

export function MotorImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MotorImage {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'idMotor': json['idMotor'] == null ? undefined : json['idMotor'],
        'front': json['front'] == null ? undefined : json['front'],
        'left': json['left'] == null ? undefined : json['left'],
        'right': json['right'] == null ? undefined : json['right'],
        'rear': json['rear'] == null ? undefined : json['rear'],
        'motor': json['motor'] == null ? undefined : MotorFromJSON(json['motor']),
    };
}

export function MotorImageToJSON(json: any): MotorImage {
    return MotorImageToJSONTyped(json, false);
}

export function MotorImageToJSONTyped(value?: MotorImage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'idMotor': value['idMotor'],
        'front': value['front'],
        'left': value['left'],
        'right': value['right'],
        'rear': value['rear'],
        'motor': MotorToJSON(value['motor']),
    };
}

