/* tslint:disable */
/* eslint-disable */
/**
 * MyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusDiskon } from './StatusDiskon';
import {
    StatusDiskonFromJSON,
    StatusDiskonFromJSONTyped,
    StatusDiskonToJSON,
    StatusDiskonToJSONTyped,
} from './StatusDiskon';
import type { Motor } from './Motor';
import {
    MotorFromJSON,
    MotorFromJSONTyped,
    MotorToJSON,
    MotorToJSONTyped,
} from './Motor';

/**
 * 
 * @export
 * @interface Diskon
 */
export interface Diskon {
    /**
     * 
     * @type {number}
     * @memberof Diskon
     */
    idDiskon?: number;
    /**
     * 
     * @type {number}
     * @memberof Diskon
     */
    idMotor?: number;
    /**
     * 
     * @type {Motor}
     * @memberof Diskon
     */
    motor?: Motor;
    /**
     * 
     * @type {string}
     * @memberof Diskon
     */
    nama?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Diskon
     */
    deskripsi?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Diskon
     */
    jumlahDiskon?: number;
    /**
     * 
     * @type {StatusDiskon}
     * @memberof Diskon
     */
    statusDiskon?: StatusDiskon;
    /**
     * 
     * @type {Date}
     * @memberof Diskon
     */
    tanggalMulai?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Diskon
     */
    tanggalAkhir?: Date;
}



/**
 * Check if a given object implements the Diskon interface.
 */
export function instanceOfDiskon(value: object): value is Diskon {
    return true;
}

export function DiskonFromJSON(json: any): Diskon {
    return DiskonFromJSONTyped(json, false);
}

export function DiskonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Diskon {
    if (json == null) {
        return json;
    }
    return {
        
        'idDiskon': json['idDiskon'] == null ? undefined : json['idDiskon'],
        'idMotor': json['idMotor'] == null ? undefined : json['idMotor'],
        'motor': json['motor'] == null ? undefined : MotorFromJSON(json['motor']),
        'nama': json['nama'] == null ? undefined : json['nama'],
        'deskripsi': json['deskripsi'] == null ? undefined : json['deskripsi'],
        'jumlahDiskon': json['jumlahDiskon'] == null ? undefined : json['jumlahDiskon'],
        'statusDiskon': json['statusDiskon'] == null ? undefined : StatusDiskonFromJSON(json['statusDiskon']),
        'tanggalMulai': json['tanggalMulai'] == null ? undefined : (new Date(json['tanggalMulai'])),
        'tanggalAkhir': json['tanggalAkhir'] == null ? undefined : (new Date(json['tanggalAkhir'])),
    };
}

  export function DiskonToJSON(json: any): Diskon {
      return DiskonToJSONTyped(json, false);
  }

  export function DiskonToJSONTyped(value?: Diskon | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idDiskon': value['idDiskon'],
        'idMotor': value['idMotor'],
        'motor': MotorToJSON(value['motor']),
        'nama': value['nama'],
        'deskripsi': value['deskripsi'],
        'jumlahDiskon': value['jumlahDiskon'],
        'statusDiskon': StatusDiskonToJSON(value['statusDiskon']),
        'tanggalMulai': value['tanggalMulai'] == null ? undefined : ((value['tanggalMulai']).toISOString()),
        'tanggalAkhir': value['tanggalAkhir'] == null ? undefined : ((value['tanggalAkhir']).toISOString()),
    };
}

