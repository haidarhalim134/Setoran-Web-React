/* tslint:disable */
/* eslint-disable */
/**
 * MyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetodePembayaran } from './MetodePembayaran';
import {
    MetodePembayaranFromJSON,
    MetodePembayaranFromJSONTyped,
    MetodePembayaranToJSON,
    MetodePembayaranToJSONTyped,
} from './MetodePembayaran';
import type { Transaksi } from './Transaksi';
import {
    TransaksiFromJSON,
    TransaksiFromJSONTyped,
    TransaksiToJSON,
    TransaksiToJSONTyped,
} from './Transaksi';
import type { StatusPembayaran } from './StatusPembayaran';
import {
    StatusPembayaranFromJSON,
    StatusPembayaranFromJSONTyped,
    StatusPembayaranToJSON,
    StatusPembayaranToJSONTyped,
} from './StatusPembayaran';

/**
 * 
 * @export
 * @interface Pembayaran
 */
export interface Pembayaran {
    /**
     * 
     * @type {number}
     * @memberof Pembayaran
     */
    idPembayaran?: number;
    /**
     * 
     * @type {number}
     * @memberof Pembayaran
     */
    idTransaksi?: number;
    /**
     * 
     * @type {MetodePembayaran}
     * @memberof Pembayaran
     */
    metodePembayaran?: MetodePembayaran;
    /**
     * 
     * @type {StatusPembayaran}
     * @memberof Pembayaran
     */
    statusPembayaran?: StatusPembayaran;
    /**
     * 
     * @type {Date}
     * @memberof Pembayaran
     */
    tanggalPembayaran?: Date | null;
    /**
     * 
     * @type {Transaksi}
     * @memberof Pembayaran
     */
    transaksi?: Transaksi;
}



/**
 * Check if a given object implements the Pembayaran interface.
 */
export function instanceOfPembayaran(value: object): value is Pembayaran {
    return true;
}

export function PembayaranFromJSON(json: any): Pembayaran {
    return PembayaranFromJSONTyped(json, false);
}

export function PembayaranFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pembayaran {
    if (json == null) {
        return json;
    }
    return {
        
        'idPembayaran': json['idPembayaran'] == null ? undefined : json['idPembayaran'],
        'idTransaksi': json['idTransaksi'] == null ? undefined : json['idTransaksi'],
        'metodePembayaran': json['metodePembayaran'] == null ? undefined : MetodePembayaranFromJSON(json['metodePembayaran']),
        'statusPembayaran': json['statusPembayaran'] == null ? undefined : StatusPembayaranFromJSON(json['statusPembayaran']),
        'tanggalPembayaran': json['tanggalPembayaran'] == null ? undefined : (new Date(json['tanggalPembayaran'])),
        'transaksi': json['transaksi'] == null ? undefined : TransaksiFromJSON(json['transaksi']),
    };
}

export function PembayaranToJSON(json: any): Pembayaran {
    return PembayaranToJSONTyped(json, false);
}

export function PembayaranToJSONTyped(value?: Pembayaran | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idPembayaran': value['idPembayaran'],
        'idTransaksi': value['idTransaksi'],
        'metodePembayaran': MetodePembayaranToJSON(value['metodePembayaran']),
        'statusPembayaran': StatusPembayaranToJSON(value['statusPembayaran']),
        'tanggalPembayaran': value['tanggalPembayaran'] == null ? undefined : ((value['tanggalPembayaran'] as any).toISOString()),
        'transaksi': TransaksiToJSON(value['transaksi']),
    };
}

