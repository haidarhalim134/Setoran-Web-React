/* tslint:disable */
/* eslint-disable */
/**
 * MyAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Motor } from './Motor';
import {
    MotorFromJSON,
    MotorFromJSONTyped,
    MotorToJSON,
    MotorToJSONTyped,
} from './Motor';
import type { Pelanggan } from './Pelanggan';
import {
    PelangganFromJSON,
    PelangganFromJSONTyped,
    PelangganToJSON,
    PelangganToJSONTyped,
} from './Pelanggan';

/**
 * 
 * @export
 * @interface Transaksi
 */
export interface Transaksi {
    /**
     * 
     * @type {number}
     * @memberof Transaksi
     */
    idTransaksi?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaksi
     */
    idMotor?: number;
    /**
     * 
     * @type {number}
     * @memberof Transaksi
     */
    idPelanggan?: number;
    /**
     * 
     * @type {Date}
     * @memberof Transaksi
     */
    tanggalMulai?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Transaksi
     */
    tanggalSelesai?: Date;
    /**
     * 
     * @type {number}
     * @memberof Transaksi
     */
    totalHarga?: number;
    /**
     * 
     * @type {string}
     * @memberof Transaksi
     */
    status?: string | null;
    /**
     * 
     * @type {Motor}
     * @memberof Transaksi
     */
    motor?: Motor;
    /**
     * 
     * @type {Pelanggan}
     * @memberof Transaksi
     */
    pelanggan?: Pelanggan;
}

/**
 * Check if a given object implements the Transaksi interface.
 */
export function instanceOfTransaksi(value: object): value is Transaksi {
    return true;
}

export function TransaksiFromJSON(json: any): Transaksi {
    return TransaksiFromJSONTyped(json, false);
}

export function TransaksiFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transaksi {
    if (json == null) {
        return json;
    }
    return {
        
        'idTransaksi': json['idTransaksi'] == null ? undefined : json['idTransaksi'],
        'idMotor': json['idMotor'] == null ? undefined : json['idMotor'],
        'idPelanggan': json['idPelanggan'] == null ? undefined : json['idPelanggan'],
        'tanggalMulai': json['tanggalMulai'] == null ? undefined : (new Date(json['tanggalMulai'])),
        'tanggalSelesai': json['tanggalSelesai'] == null ? undefined : (new Date(json['tanggalSelesai'])),
        'totalHarga': json['totalHarga'] == null ? undefined : json['totalHarga'],
        'status': json['status'] == null ? undefined : json['status'],
        'motor': json['motor'] == null ? undefined : MotorFromJSON(json['motor']),
        'pelanggan': json['pelanggan'] == null ? undefined : PelangganFromJSON(json['pelanggan']),
    };
}

  export function TransaksiToJSON(json: any): Transaksi {
      return TransaksiToJSONTyped(json, false);
  }

  export function TransaksiToJSONTyped(value?: Transaksi | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idTransaksi': value['idTransaksi'],
        'idMotor': value['idMotor'],
        'idPelanggan': value['idPelanggan'],
        'tanggalMulai': value['tanggalMulai'] == null ? undefined : ((value['tanggalMulai']).toISOString()),
        'tanggalSelesai': value['tanggalSelesai'] == null ? undefined : ((value['tanggalSelesai']).toISOString()),
        'totalHarga': value['totalHarga'],
        'status': value['status'],
        'motor': MotorToJSON(value['motor']),
        'pelanggan': PelangganToJSON(value['pelanggan']),
    };
}

